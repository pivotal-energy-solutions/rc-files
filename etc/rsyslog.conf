# rsyslog configuration file

# For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html
# If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html

#### MODULES ####
module(load="imuxsock"    # provides support for local system logging (e.g. via logger command)
       SysSock.Use="off") # Turn off message reception via local log socket;
                          # local messages are retrieved through imjournal now.
module(load="imjournal"             # provides access to the systemd journal
       UsePid="system" # PID nummber is retrieved as the ID of the process the journal entry originates from
       FileCreateMode="0644" # Set the access permissions for the state file
       StateFile="imjournal.state") # File to store the position in the journal

# Provides UDP syslog reception
# for parameters see http://www.rsyslog.com/doc/imudp.html
#module(load="imudp") # needs to be done just once
#input(type="imudp" port="514")

# Provides TCP syslog reception
# for parameters see http://www.rsyslog.com/doc/imtcp.html
#module(load="imtcp") # needs to be done just once
#input(type="imtcp" port="514")

#### GLOBAL DIRECTIVES ####
$umask 0000
$FileCreateMode 0644

# Where to place auxiliary files
$WorkDirectory /var/lib/rsyslog

# Use default timestamp format
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

# File syncing capability is disabled by default. This feature is usually not required,
# not useful and an extreme performance hit
#$ActionFileEnableSync on

# Include all config files in /etc/rsyslog.d/
$IncludeConfig /etc/rsyslog.d/*.conf

template(name="app_json" type="list" option.json="on")
   { constant(value="{")
     constant(value="\"timestamp\":\"")         property(name="timegenerated" dateFormat="rfc3339")
     constant(value="\", \"hostname\":\"HOSTNAME")
     constant(value="\", \"type\":\"syslog")
     constant(value="\", \"host_class\":\"HOST_CLASS")
     constant(value="\", \"version\":\"1")
     constant(value="\", \"app\":\"APP_NAME")
     constant(value="\", \"level_name\":\"")      property(name="syslogseverity-text")
     constant(value="\", \"severity\":\"")        property(name="syslogseverity")
     constant(value="\", \"facility_label\":\"")  property(name="syslogfacility-text")
     constant(value="\", \"facility\":\"")        property(name="syslogfacility")
     constant(value="\", \"program\":\"")         property(name="programname")
     constant(value="\", \"pid\":\"")             property(name="procid")
     constant(value="\", \"syslog_tag\":\"")      property(name="syslogtag")
     constant(value="\", \"message\":\"")         property(name="msg")
     constant(value="\"}\n")
   }

# Turn off message reception via local log socket;
# local messages are retrieved through imjournal now.
$OmitLocalLogging on

# File to store the position in the journal
$IMJournalStateFile imjournal.state


#### RULES ####

# Log all kernel messages to the console.
# Logging much else clutters up the screen.
#kern.*                                                 /dev/console
kern.*                                                  /var/log/kernel.log
$umask 0022
kern.*                                                  /var/log/kernel;app_json

# Log anything (except mail) of level info or higher.
# Don't log private authentication messages!
*.info;mail.none;authpriv.none;cron.none                /var/log/messages.log
*.info;mail.none;authpriv.none;cron.none                /var/log/messages;app_json

# The authpriv file has restricted access.
authpriv.*                                              /var/log/secure.log
$umask 0022
authpriv.*                                              /var/log/secure;app_json

# Log all the mail messages in one place.
mail.*                                                  -/var/log/maillog.log
$umask 0022
mail.*                                                  -/var/log/maillog;app_json

# Log cron stuff
cron.*                                                  /var/log/cron.log
$umask 0022
cron.*                                                  /var/log/cron;app_json

# Everybody gets emergency messages
*.emerg                                                 :omusrmsg:*

# Save news errors of level crit and higher in a special file.
uucp,news.crit                                          /var/log/spooler.log
$umask 0022
uucp,news.crit                                          /var/log/spooler;app_json

# Save boot messages also to boot.log
local7.*                                                /var/log/boot.log
$umask 0022
local7.*                                                /var/log/boot;app_json


# ### begin forwarding rule ###
# The statement between the begin ... end define a SINGLE forwarding
# rule. They belong together, do NOT split them. If you create multiple
# forwarding rules, duplicate the whole block!
# Remote Logging (we use TCP for reliable delivery)
#
# An on-disk queue is created for this action. If the remote host is
# down, messages are spooled to disk and sent when it is up again.
#$ActionQueueFileName fwdRule1 # unique name prefix for spool files
#$ActionQueueMaxDiskSpace 1g   # 1gb space limit (use as much as possible)
#$ActionQueueSaveOnShutdown on # save messages to disk on shutdown
#$ActionQueueType LinkedList   # run asynchronously
#$ActionResumeRetryCount -1    # infinite retries if host is down
# remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional
#*.* @@remote-host:514
# ### end of the forwarding rule ###
