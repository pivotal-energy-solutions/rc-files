upstream django {
    server unix:///run/uwsgi/uwsgi.sock;      # for a file socket
}

upstream status {
    server unix:///run/uwsgi/status.sock;      # for a file socket
}



server {
    listen       80 default_server;
    listen       [::]:80 default_server;
    server_name  BASE_SITE_URL;

    charset     utf-8;

    set $my_host $host;
    # if the host header is an ip address change it to www.mysite.com
    # this works around requests coming from ELB with either the instance's
    # internal ip address in the case of health checks or an unknown internal
    # ip address in the case of latency checks. translating them to a known
    # good host header makes django's ALLOWED_HOSTS happy

    if ($host ~ "\d+\.\d+\.\d+\.\d+") {
        set $my_host "BASE_SITE_URL";
    }

    if ($host ~ "ec2-\d+-\d+-\d+-\d+\.us-\w+-\d+\.compute\.amazonaws\.com") {
        set $my_host "BASE_SITE_URL";
    }

    set $cors '';
    if ($http_origin ~ '^https?://(localhost|demo.pivotalenergy.net)') {
        set $cors 'true';
    }

    include /etc/nginx/default.d/basics.conf;
    include /etc/nginx/default.d/socket-io.conf;
    include /etc/nginx/default.d/status.conf;
    include /etc/nginx/default.d/frontendf.conf;

    location @default {
        if ($cors = 'true') {
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,X-CSRFToken' always;
            add_header 'X-Frame-Options' '';
        }

        if ($request_method = 'OPTIONS') {
            # Tell client that this pre-flight info is valid for 3 days
            add_header 'Access-Control-Max-Age' 259200;
            add_header 'Access-Control-Allow-Origin' "$http_origin" always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,X-CSRFToken' always;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 200;
        }

 	    include /etc/nginx/uwsgi_params;
 	    uwsgi_param HTTP_HOST $my_host;
    	uwsgi_pass   django;
        break;
    }

    location /accounts/login/ {
        limit_req zone=login burst=5;
    	uwsgi_pass   django;
 	    include /etc/nginx/uwsgi_params;
    }

    location / {
        try_files /maintenance.html @default;
    }

}

